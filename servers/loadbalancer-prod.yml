---

certs_dir: '../../valtionavustus-secret/certs/qa_and_prod'

# ACL:s for different endpoints

loadbalancer_acl:
  - name: va_backend_qa
    condition: hdr(host) -i testi.valtionavustukset.oph.fi
  - name: va_virkailija_backend_qa
    condition: hdr(host) -i testi.virkailija.valtionavustukset.oph.fi
  - name: va_backend_prod_fi
    condition: hdr(host) -i valtionavustukset.oph.fi
  - name: va_backend_prod_sv
    condition: hdr(host) -i statsunderstod.oph.fi
  - name: va_virkailija_backend_prod
    condition: hdr(host) -i virkailija.valtionavustukset.oph.fi
  - name: va_ip_test
    condition: hdr(host) -i 86.50.28.144

# Map from acl declaration to backend

loadbalancer_acl_mapping:
  - name: va_backend_qa
    condition: if va_backend_qa
  - name: va_virkailija_backend_qa
    condition: if va_virkailija_backend_qa
  - name: va_backend_prod
    condition: if va_backend_prod_fi
  - name: va_backend_prod
    condition: if va_backend_prod_sv
  - name: va_virkailija_backend_prod
    condition: if va_virkailija_backend_prod
  - name: va_ip_test
    condition: if va_ip_test

# Define backends

haproxy_backends:
- name: 'va_backend_qa'
  balance: 'source'
  server_group:
    - name: "va_app_qa"
      port: 8081
      params: ['check']
  errorfile:
    - code: 503
      file: /etc/haproxy/va/errors/503.http
  options:
    - httpchk GET /api/healthcheck HTTP/1.1\r\nHost:\ testi.valtionavustukset.oph.fi

- name: 'va_virkailija_backend_qa'
  balance: 'source'
  server_group:
    - name: "va_app_qa"
      port: 6071
      params: ['check']
  errorfile:
    - code: 503
      file: /etc/haproxy/va/errors/503.http
  options:
    - httpchk GET /api/healthcheck HTTP/1.1\r\nHost:\ testi.virkailija.valtionavustukset.oph.fi

- name: 'va_backend_prod'
  balance: 'source'
  server_group:
    - name: "va_app_prod"
      port: 8081
      params: ['check']
  errorfile:
    - code: 503
      file: /etc/haproxy/va/errors/503.http
  options:
    - httpchk GET /api/healthcheck HTTP/1.1\r\nHost:\ valtionavustukset.oph.fi

- name: 'va_virkailija_backend_prod'
  balance: 'source'
  server_group:
    - name: "va_app_prod"
      port: 6071
      params: ['check']
  errorfile:
    - code: 503
      file: /etc/haproxy/va/errors/503.http
  options:
    - httpchk GET /api/healthcheck HTTP/1.1\r\nHost:\ virkailija.valtionavustukset.oph.fi

- name: 'va_ip_test'
  balance: 'source'
  server_group:
    - name: "va_app_qa"
      port: 8081
      params: ['check']
  errorfile:
    - code: 503
      file: /etc/haproxy/va/errors/503.http
  options:
    - httpchk GET /api/healthcheck HTTP/1.1\r\nHost:\ virkailija.valtionavustukset.oph.fi

# Global configuration - no need to change

haproxy_frontends:
  - name: 'loadbalancer'
    maxconn: '1000'
    bind: ["{{ ansible_default_ipv4.address }}:80"]
    redirects:
      - scheme https code 301
  - name: 'loadbalancer-https'
    maxconn: '1000'
    bind: ["{{ ansible_default_ipv4.address }}:443"]
    ssl:
      cert: '/etc/pki/domain/certs/'
      ciphers: 'ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DS no-sslv3'
    acl: "{{ loadbalancer_acl }}"

    use_backend: "{{ loadbalancer_acl_mapping }}"

haproxy_defaults:
  mode: http
  log:
    - address: 127.0.0.1
      facility: local2
      level: notice
  timeout:
      - param: 'connect'
        value: '5000ms'
      - param: 'http-request'
        value: '5000ms'
      - param: 'client'
        value: '50000ms'
      - param: 'server'
        value: '300000ms'
  options:
    - httpclose
    - forwardfor except 127.0.0.0/8
    - redispatch
    - abortonclose
    - httplog
    - dontlognull
  errorfile:
      - code: 400
        file: /etc/haproxy/errors/400.http
      - code: 403
        file: /etc/haproxy/errors/403.http
      - code: 408
        file: /etc/haproxy/errors/408.http
      - code: 500
        file: /etc/haproxy/errors/500.http
      - code: 502
        file: /etc/haproxy/errors/502.http
      - code: 504
        file: /etc/haproxy/errors/504.http
