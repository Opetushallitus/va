version: '3.3'

services:
  test-runner:
    image: playwright-test-runner:latest
    container_name: va-playwright-tests
    depends_on:
      virkailija:
        condition: service_healthy
    networks:
      - subnet-private
    volumes:
      - ./playwright-results:/playwright-results
    environment:
      HEADLESS: 'true'
      VIRKAILIJA_HOSTNAME: va-virkailija
      HAKIJA_HOSTNAME: va-hakija
      PLAYWRIGHT_WORKERS: 1
    command: /run_playwright_tests_in_container.sh
    logging:
      driver: none
      options:
        mode: 'non-blocking'

  virkailija:
    image: va-virkailija:latest
    container_name: va-virkailija
    hostname: va-virkailija
    environment:
      config: "/app/va-virkailija/config/playwright-test.edn"
    volumes:
      - /dev/urandom:/dev/random
    ports:
      - '8081:8081'
    depends_on:
      hakija:
        condition: service_healthy
      fakesmtp:
        condition: service_started
      maksatuspalvelu:
        condition: service_started
    networks:
      - subnet-private
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/api/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none
      options:
        mode: 'non-blocking'

  hakija:
    image: va-hakija:latest
    container_name: va-hakija
    hostname: va-hakija
    environment:
      config: "/app/va-hakija/config/playwright-test.edn"
    volumes:
      - /dev/urandom:/dev/random
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
      fakesmtp:
        condition: service_started
    networks:
      - subnet-private
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none
      options:
        mode: 'non-blocking'

  db:
    image: postgres:12.2
    volumes:
      - ./scripts/postgres-docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: va-postgres
    hostname: va-postgres
    ports:
      - '5432:5432'
    networks:
      - subnet-private
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: 'va'
      POSTGRES_PASSWORD: 'va'
      PGDATA: '/tmp/'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none
      options:
        mode: 'non-blocking'

  fakesmtp:
    image: munkyboy/fakesmtp
    container_name: fakesmtp
    hostname: fakesmtp
    networks:
      - subnet-private
    logging:
      driver: none
      options:
        mode: 'non-blocking'

  maksatuspalvelu:
    image: atmoz/sftp
    hostname: maksatuspalvelu
    volumes:
      - ./maksatuspalvelu/initialize-maksatuspalvelu.sh:/etc/sftp.d/initialize-maksatuspalvelu.sh
      - ./maksatuspalvelu/identity/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key
      - ./maksatuspalvelu/identity/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key
    ports:
      - '42022:22'
    command: demo:pass:1001:100
    networks:
      - subnet-private
    logging:
      driver: none
      options:
        mode: 'non-blocking'

networks:
  subnet-private:
