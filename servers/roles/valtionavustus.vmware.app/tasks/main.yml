- name: Allow SSH access in firewall access
  firewalld: service=ssh permanent=true state=enabled

- name: Allow port 8081 access in firewall
  firewalld: immediate=true port=8081/tcp permanent=true state=enabled

- name: Allow port 6071 access in firewall
  firewalld: immediate=true port=6071/tcp permanent=true state=enabled

- name: Mark port 8081 as http with semanage
  command: semanage port -a --type http_port_t --proto tcp 8081
  register: http_port_8081
  ignore_errors: yes

- name: Mark port 6071 as http with semanage
  command: semanage port -a --type http_port_t --proto tcp 6071
  register: http_port_6071
  ignore_errors: yes

- name: Create www group
  group: name=www state=present

- name: Create www user
  user: name=www comment="WWW user" group=www

- name: Create www-data group
  group: name=www-data state=present

- name: Create va-deploy user
  user: name=va-deploy comment="User for application deploys" group=www-data

- name: Create application dir
  file: path={{ data_dir }}/www owner=www group=www-data state=directory mode=0775

- name: Create secret config dir
  file: path={{ data_dir }}/www/secret owner=www group=www state=directory mode=0700

- name: Check if secrets config is available
  local_action: stat path="{{playbook_dir}}/../../valtionavustus-secret/config/secret-{{app_profile}}.edn"
  sudo: no
  register: secrets_file

- name: Warn if no secrets_file dir
  fail: msg='{{playbook_dir}}/../../valtionavustus-secret/config/secret-{{app_profile}}.edn file not available'
  when: secrets_file.stat.isreg is not defined or secrets_file.stat.isreg == False

- name: Copy secret config to the server
  copy: src={{playbook_dir}}/../../valtionavustus-secret/config/secret-{{app_profile}}.edn  dest={{ data_dir }}/www/secret owner=www group=www mode=0700

- name: Create dumps dir
  file: path={{ data_dir }}/www/dumps owner=www group=www-data state=directory mode=0775

- name: Create logs dir
  file: path={{ logs_dir }}/valtionavustus owner=www group=www state=directory

- name: Add supervisor conf to start and stop the applications
  template: src=supervisord.conf.j2 dest=/etc/supervisord.conf owner=root group=root mode=0644

- name: Create dir for supervisor lock file
  file: path=/var/run/supervisor owner=www group=www-data state=directory mode=0775

- name: Add supervisor daemon service
  template: src=supervisord.service.j2 dest=/etc/systemd/system/supervisord.service owner=root group=root mode=0644

- name: Ensure that supervisor daemon is started
  service: name=supervisord state=started enabled=yes

- name: Check that va-hakija is present
  supervisorctl: name=va-hakija state=present

- name: Check that va-virkailija is present
  supervisorctl: name=va-virkailija state=present

- name: Add script to run arbitrary SQL file to our db
  template: src=run_sql.bash.j2 dest=/usr/local/bin/run_sql.bash owner=postgres group=postgres mode=0700

- name: Allow va-deploy to run SQL scripts
  lineinfile: 'dest=/etc/sudoers line="va-deploy ALL=(postgres) NOPASSWD: /usr/local/bin/run_sql.bash" validate="visudo -cf %s"'

- name: Add script to dump database contents
  template: src=dump_database_to_sql.bash.j2 dest=/usr/local/bin/dump_database_to_sql.bash owner=postgres group=postgres mode=0700
