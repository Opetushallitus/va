- name: Debug hostvars
  debug: var=hostvars

- name: Add Oracle Java APT repository to sources
  action: apt_repository repo='ppa:webupd8team/java'
  when: ansible_os_family == 'Debian'

- name: Update APT package cache
  apt: update_cache=yes cache_valid_time=3600
  when: ansible_os_family == 'Debian'

- name: Upgrade APT packages
  apt: upgrade=safe
  when: ansible_os_family == 'Debian'

- name: Run YUM security updates
  command: yum --security update
  register: yum_security_updates
  when: ansible_os_family == 'RedHat'
- debug: var=yum_security_updates.stdout_lines
  when: ansible_os_family == 'RedHat'

- name: Install required APT packages
  apt: state=installed pkg={{ item }}
  with_items: ubuntu_common_required_packages
  when: ansible_os_family == 'Debian'

- name: Install required YUM packages
  yum: state=installed pkg={{ item }}
  with_items: centos_common_required_packages
  when: ansible_os_family == 'RedHat'

- name: Disable RepeatedMsgReduction of rsyslogd because it is buggy
  lineinfile: dest=/etc/rsyslog.conf regexp="^\$RepeatedMsgReduction" line="$RepeatedMsgReduction off" backup=yes
  register: rsyslog_config

- name: Restart rsyslog if config was changed
  service: name=rsyslog state=restarted
  when: rsyslog_config.changed

- name: APT Install rng-tools to avoid /dev/random exhaust
  apt: name=rng-tools
  when: ansible_os_family == 'Debian'

- name: YUM Install rng-tools to avoid /dev/random exhaust
  yum: name=rng-tools
  when: ansible_os_family == 'RedHat'

- lineinfile: dest=/etc/default/rng-tools line="HRNGDEVICE=/dev/urandom"
  when: ansible_os_family == 'Debian'

- lineinfile: dest=/usr/lib/systemd/system/rngd.service
              regexp="^ExecStart"
              line="ExecStart=/sbin/rngd -f -r /dev/urandom"
              state=present
  register: rngd_service_changed
  when: ansible_os_family == 'RedHat'

- name: Enable firewall daemon (RedHat)
  service: name=firewalld state=started enabled=yes
  when: ansible_os_family == 'RedHat'

- name: reload systemd if rng daemon was changed
  command: systemctl daemon-reload
  when: rngd_service_changed.changed

- name: Force rng-tools restart and run it on boot
  service: name=rng-tools state=restarted enabled=yes
  when: ansible_os_family == 'Debian'

- name: Force rng daemon restart and run it on boot
  service: name=rngd state=restarted enabled=yes
  when: ansible_os_family == 'RedHat'

- name: Gather test application server names to list
  debug:
    msg: |
          {% set comma = joiner(",") %}
          {% for server in groups['va_backend'] + groups['va_app_qa'] -%}
              {{ comma() }}{{ server }}
          {%- endfor %}
  register: test_application_server_names


- name: Gather production application server names to list
  debug:
    msg: |
          {% set comma = joiner(",") %}
          {% for server in groups['prod-va_backend'] + groups['va_app_prod'] -%}
              {{ comma() }}{{ server }}
          {%- endfor %}
  register: production_application_server_names
