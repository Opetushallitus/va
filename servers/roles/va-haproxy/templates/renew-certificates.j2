#!/bin/bash
set -euf -o pipefail

function log_error {
  log update failed
}
trap log_error ERR

cert_dir="{{ letsencrypt_certbot_config_dir }}/live/{{ letsencrypt_primary_domain }}"
cert="${cert_dir}/cert.pem"
combined_cert="${cert_dir}/combined.pem"

function certificate_checksum {
  if [ -f $cert ]; then
    checksum=$(sha256sum $cert |cut -f 1 -d ' ')
  else
    checksum=0
  fi
  echo $checksum
}

function log {
  local timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  echo $timestamp "$@" >> "{{ letsencrypt_certbot_logs_dir }}/renew_certificates.log"
}

function with_timestamps {
  while read line; do log "${line}"; done
}

log renew certificate if needed
old_checksum=$(certificate_checksum)

certbot certonly \
  -m noreply@opintopolku.fi \
  --agree-tos \
  --non-interactive \
  --standalone \
  --http-01-port {{ letsencrypt_certbot_port }} \
  --config-dir {{ letsencrypt_certbot_config_dir }} \
  --logs-dir {{ letsencrypt_certbot_logs_dir }} \
  --work-dir {{ letsencrypt_certbot_root_dir }} \
  --domains {% for domain in letsencrypt_domains %}{% if loop.index > 1 %},{% endif %}{{ domain }}{% endfor %} 2>&1 | with_timestamps

new_checksum=$(certificate_checksum)

if [ $new_checksum != $old_checksum ]; then
  log certificate renewed
  log copying cert to "{{ letsencrypt_combined_cert }}"
  cat "${cert_dir}"/fullchain.pem "${cert_dir}"/privkey.pem > "${combined_cert}"
  chgrp haproxy "${combined_cert}"
  chmod 640 "${combined_cert}"
  cp --preserve=mode,ownership "${combined_cert}" "{{ letsencrypt_combined_cert }}"
  log reloading the HAProxy configuration...
  sudo /bin/systemctl reload haproxy.service
else
  log certificate not renewed
fi
log done