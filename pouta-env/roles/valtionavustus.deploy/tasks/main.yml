- name: Wait untils Jenkins web API is available
  shell: curl --head --silent http://{{ jenkins_http_host }}:{{ jenkins_http_port }}{{ jenkins_prefix }}/cli/
  delay: 10
  retries: 12
  until: result.stdout.find("200 OK") != -1
  register: result

- name: Kludge to force the Jenkins job installation. For some reason it does not get triggered properly.
  command: "{{jenkins_home}}/jobs/job.sh {{item.name}}"
  with_items: jenkins_jobs

- name: Make sure Jenkins user .ssh exists
  sudo_user: "{{ jenkins_user }}"
  file: path=~{{ jenkins_user }}/.ssh state=directory mode=0700

- name: Make sure Jenkins user .ssh/known_hosts exists
  sudo_user: "{{ jenkins_user }}"
  file: "path=~{{ jenkins_user }}/.ssh/known_hosts state=touch mode=0600"

- name: Remove the old SSH host key of test application servers from to ~{{ jenkins_user }}/.ssh/known_hosts
  sudo_user: "{{ jenkins_user }}"
  shell: "ssh-keygen -R {{ item }}"
  with_items: groups['va_backend']

- name: Remove the old SSH host key of production application servers from to ~{{ jenkins_user }}/.ssh/known_hosts
  sudo_user: "{{ jenkins_user }}"
  shell: "ssh-keygen -R {{ item }}"
  with_items: groups['prod-va_backend']

- name: Add the new SSH host key of test application servers to ~{{ jenkins_user }}/.ssh/known_hosts for deploys
  sudo_user: "{{ jenkins_user }}"
  shell: "ssh-keyscan -H {{ item }} >> ~{{ jenkins_user }}/.ssh/known_hosts"
  with_items: groups['va_backend']

- name: Add the new SSH host key of production application servers to ~{{ jenkins_user }}/.ssh/known_hosts for deploys
  sudo_user: "{{ jenkins_user }}"
  shell: "ssh-keyscan -H {{ item }} >> ~{{ jenkins_user }}/.ssh/known_hosts"
  with_items: groups['prod-va_backend']

- name: Generate new SSH key for "{{ jenkins_user }}" user for application deploys
  user: name="{{ jenkins_user }}" generate_ssh_key=yes ssh_key_file=.ssh/id_deploy

- name: Fetch ~"{{ jenkins_user }}".ssh/id_deploy.pub for adding it to app server machine
  fetch: src=~{{ jenkins_user }}/.ssh/id_deploy.pub dest=/tmp/{{ ansible_hostname }}-{{ jenkins_user }}.pub flat=yes fail_on_missing=yes

- name: Add new jenkins public SSH key to deployer account on test app server machines
  authorized_key: user="va-deploy"
                  key='{{ lookup("file", "/tmp/" + ansible_hostname + "-" + jenkins_user + ".pub") }}'
  delegate_to: "{{ item }}"
  with_items: groups['va_backend']

- name: Add new jenkins public SSH key to deployer account on production app server machines
  authorized_key: user="va-deploy"
                  key='{{ lookup("file", "/tmp/" + ansible_hostname + "-" + jenkins_user + ".pub") }}'
  delegate_to: "{{ item }}"
  with_items: groups['prod-va_backend']

- name: Add new jenkins public SSH key to Postgresql account on test app server machines for backups
  authorized_key: user="postgres"
                  key='{{ lookup("file", "/tmp/" + ansible_hostname + "-" + jenkins_user + ".pub") }}'
  delegate_to: "{{ item }}"
  with_items: groups['va_backend']

- name: Add new jenkins public SSH key to Postgresql account on production app server machines for backups
  authorized_key: user="postgres"
                  key='{{ lookup("file", "/tmp/" + ansible_hostname + "-" + jenkins_user + ".pub") }}'
  delegate_to: "{{ item }}"
  with_items: groups['prod-va_backend']

- name: Add directory for database backups storage
  file: path=/mnt/database-backup owner={{ jenkins_user }} state=directory mode=0700